<ProjectData xmlns="http://schemas.datacontract.org/2004/07/BG8.Supercharger.Features.CodeMarker.Persistence" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><ProjectItemsData xmlns:a="http://schemas.microsoft.com/2003/10/Serialization/Arrays"><a:KeyValueOfstringProjectItemData0bJq_P02M><a:Key>c78bca71-8b49-4200-a8cd-40a4bdbab719</a:Key><a:Value><DataItems xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Concurrent"><b:m_serializationArray><DataItem><AbsPos>40522</AbsPos><Color>4</Color><Text>    at the first we got the errror that the localhost not foune&#xD;
    fort that we have to gon into the controller and then give the the Area name  &#xD;
    [Area("Admin")]&#xD;
</Text></DataItem><DataItem><AbsPos>39439</AbsPos><Color>4</Color><Text>  public IActionResult Edit(int id)   Add view Select VieModel and edit &#xD;
        {&#xD;
            var viewModel = _hospitalInfo.GetHospitalById(id);&#xD;
            return View(viewModel);&#xD;
        } //fro</Text></DataItem><DataItem><AbsPos>38549</AbsPos><Color>4</Color><Text> (cloudscribe.Web.Pagination) </Text></DataItem><DataItem><AbsPos>35825</AbsPos><Color>4</Color><Text>    @using Hopital.Uitility // we are importing the Utility because in the Utitlity we have t&#xD;
   // ViewModel &#xD;
@model PageResult&lt;Hospital.ViewModel.HospitalInfoViewModel&gt;</Text></DataItem><DataItem><AbsPos>33827</AbsPos><Color>4</Color><Text>ApplictionDbContext</Text></DataItem><DataItem><AbsPos>31251</AbsPos><Color>3</Color><Text>  migrationBuilder.CreateTable(&#xD;
    name: "PatientReport",&#xD;
    columns: table =&gt; new&#xD;
    {&#xD;
        Id = table.Column&lt;int&gt;(type: "int", nullable: false)&#xD;
            .Annotation("SqlServer:Identity", "1, 1"),&#xD;
        Diagnose = table.Column&lt;string&gt;(type: "nvarchar(max)", nullable: false),&#xD;
        MedicineName = table.Column&lt;string&gt;(type: "nvarchar(max)", nullable: false),&#xD;
        DoctorId = table.Column&lt;string&gt;(type: "nvarchar(450)", nullable: false),&#xD;
        PatientId = table.Column&lt;string&gt;(type: "nvarchar(450)", nullable: false)&#xD;
    },&#xD;
    constraints: table =&gt;&#xD;
    {&#xD;
        table.PrimaryKey("PK_PatientReport", x =&gt; x.Id);&#xD;
        table.ForeignKey(&#xD;
            name: "FK_PatientReport_ApplicationUser_DoctorId",&#xD;
            column: x =&gt; x.DoctorId,&#xD;
            principalTable: "ApplicationUser",&#xD;
            principalColumn: "Id",&#xD;
            onDelete: ReferentialAction.NoAction);  // Change to NoAction&#xD;
        table.ForeignKey(&#xD;
            name: "FK_PatientReport_ApplicationUser_PatientId",&#xD;
            column: x =&gt; x.PatientId,&#xD;
            principalTable: "ApplicationUser",&#xD;
            principalColumn: "Id",&#xD;
            onDelete: ReferentialAction.NoAction);  // Change to NoAction&#xD;
    });&#xD;
</Text></DataItem><DataItem><AbsPos>32565</AbsPos><Color>3</Color><Text>migrationBuilder.CreateTable(&#xD;
    name: "TestPrices",&#xD;
    columns: table =&gt; new&#xD;
    {&#xD;
        Id = table.Column&lt;int&gt;(type: "int", nullable: false)&#xD;
            .Annotation("SqlServer:Identity", "1, 1"),&#xD;
        TestCode = table.Column&lt;string&gt;(type: "nvarchar(max)", nullable: false),&#xD;
        Price = table.Column&lt;decimal&gt;(type: "decimal(18,2)", nullable: false),&#xD;
        LabId = table.Column&lt;int&gt;(type: "int", nullable: false),&#xD;
        BillId = table.Column&lt;int&gt;(type: "int", nullable: false)&#xD;
    },&#xD;
    constraints: table =&gt;&#xD;
    {&#xD;
        table.PrimaryKey("PK_TestPrices", x =&gt; x.Id);&#xD;
        table.ForeignKey(&#xD;
            name: "FK_TestPrices_Bills_BillId",&#xD;
            column: x =&gt; x.BillId,&#xD;
            principalTable: "Bills",&#xD;
            principalColumn: "Id",&#xD;
            onDelete: ReferentialAction.NoAction); // Change to NoAction&#xD;
        table.ForeignKey(&#xD;
            name: "FK_TestPrices_Labs_LabId",&#xD;
            column: x =&gt; x.LabId,&#xD;
            principalTable: "Labs",&#xD;
            principalColumn: "Id",&#xD;
            onDelete: ReferentialAction.NoAction); // Change to NoAction&#xD;
    });&#xD;
</Text></DataItem><DataItem><AbsPos>33899</AbsPos><Color>3</Color><Text>            protected override void OnModelCreating(ModelBuilder modelBuilder)&#xD;
{&#xD;
    base.OnModelCreating(modelBuilder);&#xD;
&#xD;
    modelBuilder.Entity&lt;Appointments&gt;()&#xD;
        .HasOne(a =&gt; a.Doctor) // Assuming a navigation property&#xD;
        .WithMany() // Depending on the relationships defined&#xD;
        .HasForeignKey(a =&gt; a.DoctorId)&#xD;
        .OnDelete(DeleteBehavior.Cascade); // Cascading delete for DoctorId&#xD;
&#xD;
    modelBuilder.Entity&lt;Appointments&gt;()&#xD;
        .HasOne(a =&gt; a.Patient) // Assuming a navigation property&#xD;
        .WithMany() // Depending on the relationships defined&#xD;
        .HasForeignKey(a =&gt; a.PatientId)&#xD;
        .OnDelete(DeleteBehavior.NoAction); // No cascading delete for PatientId&#xD;
}&#xD;
&#xD;
</Text></DataItem><DataItem><AbsPos>37719</AbsPos><Color>2</Color><Text>&#xD;
&lt; cs - pager cs - paging - pagesize = (int)Model.PageSize&#xD;
cs - paging - pagenumber = (int)Model.PageNumber&#xD;
cs - paging - totalitems = (int)Model.TotalItems&#xD;
cs - pagenumber - param = "pageNumber"&#xD;
asp - controller = "RoomType"&#xD;
&#xD;
&#xD;
 Typo asp-action="Index" &#xD;
 co-pagor-li-current-class= "page-iton activo"&#xD;
 cs - pager - 11 - other -class= "page-iter"&#xD;
 cs - pager - 11 - non - active class= "page ites disabled"&#xD;
 co - pagar - Link - current -class= "page-link"&#xD;
 cs - pager Link - other -class= "page-link" &gt; &lt;/ cs - pager &gt;&#xD;
</Text></DataItem><DataItem><AbsPos>38584</AbsPos><Color>1</Color><Text>then we have  to go into the viewImport.Cshtml where we have to mention the package &#xD;
    name so it is availabel for the each and every page </Text></DataItem></b:m_serializationArray></DataItems><ProjectItemFileName>c78bca71-8b49-4200-a8cd-40a4bdbab719</ProjectItemFileName></a:Value></a:KeyValueOfstringProjectItemData0bJq_P02M></ProjectItemsData><ProjectName>Solution Items</ProjectName></ProjectData>